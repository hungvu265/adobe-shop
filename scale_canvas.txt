<script setup>
import HeaderComponent from "./components/Header.vue";
import AdvertiseComponent from "./components/Advertise.vue";
import ItemComponent from "./components/Item.vue"
import PriceComponent from "./components/Price.vue";
import FooterComponent from "./components/Footer.vue";
import ExtensionComponent from "./components/Extension.vue";
import {onMounted, reactive, ref} from "vue";
import VueDrawingCanvas from "vue-drawing-canvas";
import VueDrawingCanvasSketch from "vue-drawing-canvas/dist/vue-drawing-canvas-sketch.esm.js";
const props = reactive({
    image: "",
    imageSketch: "",
    eraser: false,
    disabled: false,
    fillShape: false,
    line: 5,
    color: "#000000",
    strokeType: "dash",
    lineCap: "square",
    lineJoin: "miter",
    backgroundColor: "#FFFFFF",
    backgroundImage: null,
    watermark: null,
    additionalImages: [],
    initialImage: [
        {
            type: "dash",
            from: {
                x: 262,
                y: 154,
            },
            coordinates: [],
            color: "#000000",
            width: 5,
            fill: false,
        },
    ],
})
const scaledImage = ref('')
const handleMouse = () => {
    const img = scaleImage(props.image, 1.5);
    props.imageSketch = img
}

function scaleImage(imageUrl, scale) {
    const img = new Image();
    img.onload = () => {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');

        // Tắt nội suy (smoothing) để tránh mờ
        ctx.imageSmoothingEnabled = false;

        canvas.width = img.width * scale;
        canvas.height = img.height * scale;

        // Vẽ lại hình ảnh với scale
        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

        // Lưu kết quả scale thành base64
        scaledImage.value = canvas.toDataURL();
    };
    img.src = imageUrl;
}
</script>

<template>
    <div class="mt-2" id="container">
        <header>
            <header-component/>
        </header>
        <main>
            <router-view />
        </main>
        <footer>
            <footer-component />
        </footer>
    </div>
    <div class="d-flex gap-4">
        <div>
            <vue-drawing-canvas
                ref="VueCanvasDrawing"
                v-model:image="props.image"
                :width="600"
                :height="400"
                :stroke-type="props.strokeType"
                :line-cap="props.lineCap"
                :line-join="props.lineJoin"
                :fill-shape="props.fillShape"
                :eraser="props.eraser"
                :lineWidth="props.line"
                :color="props.color"
                :background-color="props.backgroundColor"
                :background-image="props.backgroundImage"
                :watermark="props.watermark"
                :initial-image="props.initialImage"
                saveAs="png"
                :styles="{border: 'solid 1px #000',}"
                @mouseup="handleMouse"
                :lock="disabled"
            />
        </div>
        <div>
            <vue-drawing-canvas-sketch
                ref="VueCanvasDrawing"
                v-model:image="props.imageSketch"
                :width="600"
                :height="400"
                :stroke-type="props.strokeType"
                :line-cap="props.lineCap"
                :line-join="props.lineJoin"
                :fill-shape="props.fillShape"
                :eraser="props.eraser"
                :lineWidth="props.line"
                :color="props.color"
                :background-color="props.backgroundColor"
                :background-image="props.backgroundImage"
                :watermark="props.watermark"
                :initial-image="props.initialImage"
                saveAs="png"
                :styles="{border: 'solid 1px #000',}"
                :lock="disabled"
            />
        </div>
    </div>
    <div class="d-flex gap-4">
        <div class="output">
            <p>Output:</p>
            <img :src="props.image" style="border: solid 1px #000000" />
        </div>
        <div class="output1">
            <p>Output 1:</p>
            <img :src="scaledImage" style="border: solid 1px #000000" />
        </div>
    </div>
</template>

<style scoped>

</style>
